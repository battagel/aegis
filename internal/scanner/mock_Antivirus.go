// Code generated by mockery v2.23.1. DO NOT EDIT.

package scanner

import mock "github.com/stretchr/testify/mock"

// MockAntivirus is an autogenerated mock type for the Antivirus type
type MockAntivirus struct {
	mock.Mock
}

// GetName provides a mock function with given fields:
func (_m *MockAntivirus) GetName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ScanFile provides a mock function with given fields: _a0
func (_m *MockAntivirus) ScanFile(_a0 string) (bool, string, error) {
	ret := _m.Called(_a0)

	var r0 bool
	var r1 string
	var r2 error
	if rf, ok := ret.Get(0).(func(string) (bool, string, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(string) string); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Get(1).(string)
	}

	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(_a0)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

type mockConstructorTestingTNewMockAntivirus interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockAntivirus creates a new instance of MockAntivirus. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockAntivirus(t mockConstructorTestingTNewMockAntivirus) *MockAntivirus {
	mock := &MockAntivirus{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
